
.btn-circle[data-v-3fc294e1] {
    width: 30px;
    height: 30px;
    padding: 6px 0px;
    border-radius: 15px;
    text-align: center;
    font-size: 12px;
    line-height: 1.42857;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/